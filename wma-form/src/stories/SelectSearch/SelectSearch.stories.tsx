import type { Meta, StoryObj } from '@storybook/react';
import { Form, SelectSearch } from '../../../index';
import { Option, SelectSearchProps } from '../../../components/SelectSearch/types';
import React from 'react';
import { useSelectExternalControl } from '../../../components/SelectSearch/hooks';

type LocalArgs = SelectSearchProps & {
	useAsync?: boolean;
	withValidation?: boolean;
	prefix?: string;
	suffix?: string;
	customPrefix?: string;
	customSuffix?: string;
	showDefaultSuffix?: boolean;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–∫–æ–Ω–æ–∫ –∏–∑ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
const createIcon = (iconType: string, customValue?: string, color: string = '#666') => {
	if (iconType === 'none') return null;
	if (iconType === 'custom') {
		if (!customValue || customValue.trim() === '') return null;
		return (
			<div
				style={{
					display: 'flex',
					alignItems: 'center',
					justifyContent: 'center',
					width: 20,
					height: 20,
					color: color,
					fontSize: 16,
				}}>
				{customValue}
			</div>
		);
	}

	const iconMap: Record<string, string> = {
		search: 'üîç',
		user: 'üë§',
		star: '‚≠ê',
		heart: '‚ù§Ô∏è',
		'arrow-down': '', // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è –ø–æ–∫–∞–∑–∞ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–π —Å—Ç—Ä–µ–ª–∫–∏ —Å —Ä–æ—Ç–∞—Ü–∏–µ–π
		plus: '+',
		check: '‚úì',
		close: '‚úï',
	};

	const icon = iconMap[iconType];

	// –ï—Å–ª–∏ icon === null, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º null (–¥–ª—è –¥–µ—Ñ–æ–ª—Ç–Ω–æ–π —Å—Ç—Ä–µ–ª–∫–∏)
	if (icon === null) return null;

	// –ï—Å–ª–∏ icon –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ map, –∏—Å–ø–æ–ª—å–∑—É–µ–º iconType –∫–∞–∫ –µ—Å—Ç—å
	const displayIcon = icon || iconType;

	return (
		<div
			style={{
				display: 'flex',
				alignItems: 'center',
				justifyContent: 'center',
				width: 20,
				height: 20,
				color: color,
				fontSize: 16,
			}}>
			{displayIcon}
		</div>
	);
};

// –û–±—Ä–∞–∑—Ü—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
const sampleOptions: Option[] = [
	{ label: 'JavaScript', value: 'js' },
	{ label: 'TypeScript', value: 'ts' },
	{ label: 'Python', value: 'py' },
	{ label: 'Java', value: 'java' },
	{ label: 'C#', value: 'csharp' },
	{ label: 'Go', value: 'go' },
	{ label: 'Rust', value: 'rust' },
	{ label: 'PHP', value: 'php' },
	{ label: 'Ruby', value: 'ruby' },
	{ label: 'Swift', value: 'swift' },
];

const meta: Meta<LocalArgs> = {
	title: 'Components/SelectSearch',
	component: SelectSearch,
	parameters: {
		layout: 'padded',
		docs: {
			description: {
				component: `
# SelectSearch

–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–µ–ª–µ–∫—Ç–∞ —Å –ø–æ–∏—Å–∫–æ–º, –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –æ–¥–∏–Ω–æ—á–Ω–æ–≥–æ –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞, –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π –¥–∞–Ω–Ω—ã—Ö –∏ –≤–Ω–µ—à–Ω–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º.

## –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

- üîç **–ü–æ–∏—Å–∫** - —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –æ–ø—Ü–∏–π –ø–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–º—É —Ç–µ–∫—Å—Ç—É
- üéØ **–û–¥–∏–Ω–æ—á–Ω—ã–π/–º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä** - –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–π —Ä–µ–∂–∏–º –≤—ã–±–æ—Ä–∞
- ‚ö° **–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞** - –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –ø–æ–¥–≥—Ä—É–∑–∫–∞ –æ–ø—Ü–∏–π
- üéõÔ∏è **–í–Ω–µ—à–Ω–µ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ** - –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å —á–µ—Ä–µ–∑ API
- üì± **–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å** - —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
- üé® **–ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è** - –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–µ —Å—Ç–∏–ª–∏ –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ

## –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

\`\`\`tsx
import { SelectSearch, Form } from 'wma-form';

<Form formId="my-form" onValidSubmit={(data) => console.log(data)}>
	  <SelectSearch
    formId="my-form"
	    name="language"
    label="–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è"
    options={[
      { label: 'JavaScript', value: 'js' },
      { label: 'TypeScript', value: 'ts' },
      { label: 'Python', value: 'py' }
    ]}
    multiple={false}
    required={true}
	  />
</Form>
\`\`\`
	                `,
			},
		},
	},
	argTypes: {
		label: {
			control: 'text',
			description: '–ü–æ–¥–ø–∏—Å—å –ø–æ–ª—è',
		},
		placeholder: {
			control: 'text',
			description: '–ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥–∞',
		},
		multiple: {
			control: 'boolean',
			description: '–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä',
		},
		required: {
			control: 'boolean',
			description: '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ',
		},
		disabled: {
			control: 'boolean',
			description: '–û—Ç–∫–ª—é—á–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ',
		},
		hideInput: {
			control: 'boolean',
			description: '–°–∫—Ä—ã—Ç—å –ø–æ–ª–µ –≤–≤–æ–¥–∞',
		},
		hideClearButton: {
			control: 'boolean',
			description: '–°–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É –æ—á–∏—Å—Ç–∫–∏',
		},
		hideSelectedFromDropdown: {
			control: 'boolean',
			description: '–°–∫—Ä—ã—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –æ–ø—Ü–∏–∏ –∏–∑ –¥—Ä–æ–ø–¥–∞—É–Ω–∞',
		},
		allowBackspaceDelete: {
			control: 'boolean',
			description: '–†–∞–∑—Ä–µ—à–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Backspace',
		},
		maxVisibleItems: {
			control: { type: 'number', min: 1, max: 20 },
			description: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–∏–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤',
		},
		visibleCount: {
			control: { type: 'number', min: 1, max: 10 },
			description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–∏–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –¥—Ä–æ–ø–¥–∞—É–Ω–µ',
		},
		debounceMs: {
			control: { type: 'number', min: 0, max: 1000 },
			description: '–ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ (–º—Å)',
		},
		prefix: {
			control: 'select',
			options: ['', 'üîç', 'üë§', '‚≠ê', '‚ù§Ô∏è', 'üéØ', 'üöÄ', 'üíª', 'üì±', 'üîß'],
			description: '–ò–∫–æ–Ω–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ–ª–µ–º –≤–≤–æ–¥–∞',
		},
		suffix: {
			control: 'select',
			options: ['', 'arrow-down', '+', '‚úì', '‚úï', 'üöÄ', '‚≠ê', 'üíª', 'üì±', 'üîß'],
			description: '–ò–∫–æ–Ω–∫–∞ –ø–æ—Å–ª–µ –ø–æ–ª—è –≤–≤–æ–¥–∞',
		},
		showDefaultSuffix: {
			control: 'boolean',
			description: '–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—É—é —Å—Ç—Ä–µ–ª–∫—É (–µ—Å–ª–∏ suffix –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω)',
		},
		loadOptions: {
			control: { type: 'text', disabled: true },
			description: '–§—É–Ω–∫—Ü–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –æ–ø—Ü–∏–π',
		},
		validator: {
			control: { type: 'text', disabled: true },
			description: '–§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–æ–ª—è',
		},
		maxLength: {
			control: 'number',
			description: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞',
		},
		minLength: {
			control: 'number',
			description: '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞',
		},
		hideErrorOnFocus: {
			control: 'boolean',
			description: '–°–∫—Ä—ã–≤–∞—Ç—å –æ—à–∏–±–∫—É –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ',
		},
		initialValue: {
			control: 'text',
			description: '–ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ',
		},
		useAsync: {
			control: 'boolean',
			description: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É',
		},
		withValidation: {
			control: 'boolean',
			description: '–í–∫–ª—é—á–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é',
		},
	},
	args: {
		label: '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è',
		placeholder: '–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å...',
		multiple: false,
		required: false,
		disabled: false,
		hideInput: false,
		hideClearButton: false,
		hideSelectedFromDropdown: false,
		allowBackspaceDelete: true,
		maxVisibleItems: 5,
		visibleCount: 8,
		debounceMs: 250,
		prefix: 'üîç',
		suffix: 'arrow-down',
		showDefaultSuffix: true,
		loadOptions: undefined,
		validator: undefined,
		maxLength: undefined,
		minLength: undefined,
		hideErrorOnFocus: true,
		initialValue: '',
		useAsync: false,
		withValidation: false,
		options: sampleOptions,
	},
};

export default meta;
type Story = StoryObj<LocalArgs>;

// 1. –ë–ê–ó–û–í–ê–Ø –ò–°–¢–û–†–ò–Ø - –±–µ–∑ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞
export const Basic: Story = {
	render: (args) => {
		const validator = (args.withValidation as boolean)
			? ({ value }: { value: string | string[] }) => {
					if ((Array.isArray(value) && value.length === 0) || (!Array.isArray(value) && !value)) {
						return '–ü–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è';
					}
					return '';
			  }
			: undefined;

		const loadFn = (args.useAsync as boolean)
			? async (q: string) => {
					await new Promise((r) => setTimeout(r, args.debounceMs ?? 250));
					return ((args.options as Option[]) || sampleOptions).filter((o) => o.label.toLowerCase().includes(q.toLowerCase()));
			  }
			: undefined;

		return (
			<div style={{ maxWidth: 640 }}>
				<Form
					formId='basic-form'
					onValidSubmit={(data) => {
						console.log('Form submitted:', data);
					}}>
					<SelectSearch
						formId='basic-form'
						name='basic-select'
						label={args.label}
						options={(args.options as Option[]) || sampleOptions}
						loadOptions={loadFn}
						placeholder={args.placeholder as string}
						multiple={!!args.multiple}
						required={!!args.required}
						disabled={!!args.disabled}
						hideInput={!!args.hideInput}
						hideClearButton={!!args.hideClearButton}
						hideSelectedFromDropdown={!!args.hideSelectedFromDropdown}
						allowBackspaceDelete={!!args.allowBackspaceDelete}
						maxVisibleItems={args.maxVisibleItems as number}
						visibleCount={args.visibleCount as number}
						debounceMs={args.debounceMs as number}
						maxLength={args.maxLength as number}
						minLength={args.minLength as number}
						hideErrorOnFocus={!!args.hideErrorOnFocus}
						prefix={args.prefix || null}
						suffix={args.suffix === 'arrow-down' ? null : args.suffix || null}
						showDefaultSuffix={!!args.showDefaultSuffix}
						validator={validator as unknown as SelectSearchProps['validator']}
						initialValue={args.initialValue as string | string[]}
						showTagLine={!!args.showTagLine}
					/>
				</Form>

				{/* –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è */}
				<div style={{ marginTop: 24, padding: 16, backgroundColor: '#f8f9fa', borderRadius: 8, border: '1px solid #e9ecef' }}>
					<h4 style={{ margin: '0 0 12px 0', color: '#495057' }}>üìñ –ë–∞–∑–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ</h4>
					<p style={{ margin: '0 0 12px 0', fontSize: 14, color: '#6c757d' }}>
						–≠—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ SelectSearch –±–µ–∑ –≤–Ω–µ—à–Ω–µ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è. –í—Å–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.
					</p>
					<div style={{ fontSize: 12, color: '#6c757d' }}>
						<strong>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</strong>
						<ul style={{ margin: '4px 0 0 0', paddingLeft: 16 }}>
							<li>–ü–æ–∏—Å–∫ –ø–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–º—É —Ç–µ–∫—Å—Ç—É</li>
							<li>–í—ã–±–æ—Ä –æ–ø—Ü–∏–π –∫–ª–∏–∫–æ–º</li>
							<li>–û—á–∏—Å—Ç–∫–∞ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –∏–ª–∏ Backspace</li>
							<li>–í–∞–ª–∏–¥–∞—Ü–∏—è (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞)</li>
							<li>–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞)</li>
						</ul>
					</div>
				</div>
			</div>
		);
	},
	args: {
		label: '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è',
		placeholder: '–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å...',
		multiple: false,
		required: false,
		disabled: false,
		hideInput: false,
		hideClearButton: false,
		hideSelectedFromDropdown: false,
		allowBackspaceDelete: true,
		maxVisibleItems: 5,
		visibleCount: 8,
		debounceMs: 250,
		prefix: 'üîç',
		suffix: 'arrow-down',
		showDefaultSuffix: true,
		loadOptions: undefined,
		validator: undefined,
		maxLength: undefined,
		minLength: undefined,
		hideErrorOnFocus: true,
		initialValue: '',
		useAsync: false,
		withValidation: false,
	},
};

// 2. –ò–°–¢–û–†–ò–Ø –° –ü–û–õ–ù–´–ú –í–ù–ï–®–ù–ò–ú –ö–û–ù–¢–†–û–õ–ï–ú
export const ExternalControl: Story = {
	render: (args) => {
		// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö—É–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏ —á—Ç–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
		const {
			selectByValue,
			clearAll: hookClearAll,
			getSelectedValues,
			getSelectedCount,
			hasSelectedValues,
			getFieldState,
			getCurrentQuery,
		} = useSelectExternalControl({
			formId: 'external-form',
			name: 'external-select',
			multiple: !!args.multiple,
			options: (args.options as Option[]) || sampleOptions,
		});

		const fieldState = getFieldState();
		const [externalQuery, setExternalQuery] = React.useState<string>('');

		// –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥—Ä–æ–ø–¥–∞—É–Ω–æ–º —á–µ—Ä–µ–∑ DOM (—Ä–∞–±–æ—Ç–∞—é—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º)
		const openDropdown = () => {
			const input = document.querySelector('#select-search-external-form-external-select') as HTMLInputElement;
			if (input) {
				input.focus();
				input.click();
			}
		};

		const closeDropdown = () => {
			// –ö–ª–∏–∫–∞–µ–º –≤–Ω–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
			document.body.click();
		};

		const setSearchQuery = (query: string) => {
			// –ù–∞—Ö–æ–¥–∏–º input –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
			const input = document.querySelector('#select-search-external-form-external-select') as HTMLInputElement;
			if (input) {
				// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ React
				const nativeInputValueSetter = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, 'value')?.set;
				if (nativeInputValueSetter) {
					nativeInputValueSetter.call(input, query);
				}

				// –°–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏–µ input –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
				const inputEvent = new Event('input', { bubbles: true });
				input.dispatchEvent(inputEvent);

				// –¢–∞–∫–∂–µ —Å–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏–µ change
				const changeEvent = new Event('change', { bubbles: true });
				input.dispatchEvent(changeEvent);

				// –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥—Ä–æ–ø–¥–∞—É–Ω –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
				setTimeout(() => {
					openDropdown();
				}, 100);
			}
		};

		const clearAll = () => {
			// –°–Ω–∞—á–∞–ª–∞ –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—á–∏—Å—Ç–∫–∏ –∏–∑ —Ö—É–∫–∞
			hookClearAll();

			// –ó–∞—Ç–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º —á–µ—Ä–µ–∑ DOM –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
			setTimeout(() => {
				// –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É –æ—á–∏—Å—Ç–∫–∏ –∏ –∫–ª–∏–∫–Ω—É—Ç—å –ø–æ –Ω–µ–π
				const clearButton = document.querySelector('.button-clear-all');
				if (clearButton) {
					(clearButton as HTMLElement).click();
				} else {
					// –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –æ—á–∏—â–∞–µ–º —á–µ—Ä–µ–∑ DOM –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏
					const input = document.querySelector('#select-search-external-form-external-select') as HTMLInputElement;
					if (input) {
						// –û—á–∏—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ React
						const nativeInputValueSetter = Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype, 'value')?.set;
						if (nativeInputValueSetter) {
							nativeInputValueSetter.call(input, '');
						}

						// –°–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏–µ input –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
						const inputEvent = new Event('input', { bubbles: true });
						input.dispatchEvent(inputEvent);

						// –¢–∞–∫–∂–µ —Å–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏–µ change
						const changeEvent = new Event('change', { bubbles: true });
						input.dispatchEvent(changeEvent);
					}
				}
			}, 50);
		};

		return (
			<div style={{ display: 'flex', flexDirection: 'column', gap: 24 }}>
				<div style={{ maxWidth: 640 }}>
					<Form
						formId='external-form'
						onValidSubmit={(data) => console.log('Form submitted:', data)}>
						<SelectSearch
							formId='external-form'
							name='external-select'
							label={args.label}
							options={(args.options as Option[]) || sampleOptions}
							placeholder={args.placeholder as string}
							multiple={!!args.multiple}
							required={!!args.required}
							disabled={!!args.disabled}
							hideInput={!!args.hideInput}
							hideClearButton={!!args.hideClearButton}
							hideSelectedFromDropdown={!!args.hideSelectedFromDropdown}
							allowBackspaceDelete={!!args.allowBackspaceDelete}
							maxVisibleItems={args.maxVisibleItems as number}
							visibleCount={args.visibleCount as number}
							debounceMs={args.debounceMs as number}
							maxLength={args.maxLength as number}
							minLength={args.minLength as number}
							hideErrorOnFocus={!!args.hideErrorOnFocus}
							prefix={args.prefix === 'custom' ? args.customPrefix : args.prefix === 'none' ? null : args.prefix}
							suffix={args.suffix === 'custom' ? args.customSuffix : args.suffix === 'none' ? null : args.suffix === 'arrow-down' ? null : args.suffix}
							showDefaultSuffix={!!args.showDefaultSuffix}
							initialValue={args.initialValue as string | string[]}
							showTagLine={!!args.showTagLine}
						/>
					</Form>
				</div>

				<div style={{ padding: 16, borderRadius: 8, backgroundColor: '#f9f9f9', border: '1px solid #e0e0e0' }}>
					<h3 style={{ margin: '0 0 16px 0', fontSize: 16, fontWeight: 600 }}>üéõÔ∏è –í–Ω–µ—à–Ω–µ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</h3>

					<div style={{ marginBottom: 16, padding: 12, backgroundColor: 'white', borderRadius: 4, border: '1px solid #ddd' }}>
						<strong>–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:</strong>
						<div style={{ marginTop: 8, fontSize: 14 }}>
							<div>
								–í—ã–±—Ä–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: <code>{JSON.stringify(getSelectedValues())}</code>
							</div>
							<div>
								–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: <code>{getSelectedCount()}</code>
							</div>
							<div>
								–ï—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è: <code>{hasSelectedValues() ? '–î–∞' : '–ù–µ—Ç'}</code>
							</div>
							<div>
								–ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: <code>"{getCurrentQuery()}"</code>
							</div>
							<div>
								–§–æ–∫—É—Å: <code>{fieldState.focused ? '–î–∞' : '–ù–µ—Ç'}</code>
							</div>
							<div>
								–û—à–∏–±–∫–∞: <code>{fieldState.error || '–ù–µ—Ç'}</code>
							</div>
						</div>
					</div>

					<div style={{ display: 'flex', flexWrap: 'wrap', gap: 8, marginBottom: 16 }}>
						<h4 style={{ width: '100%', margin: '0 0 8px 0', fontSize: 14 }}>–í—ã–±–æ—Ä –æ–ø—Ü–∏–π:</h4>
						<button
							onClick={() => selectByValue('js')}
							style={{ padding: '6px 12px', fontSize: 12, backgroundColor: '#e3f2fd' }}
							disabled={!!args.disabled}>
							–í—ã–±—Ä–∞—Ç—å JavaScript
						</button>
						<button
							onClick={() => selectByValue('ts')}
							style={{ padding: '6px 12px', fontSize: 12, backgroundColor: '#e3f2fd' }}
							disabled={!!args.disabled}>
							–í—ã–±—Ä–∞—Ç—å TypeScript
						</button>
						<button
							onClick={() => selectByValue('py')}
							style={{ padding: '6px 12px', fontSize: 12, backgroundColor: '#e3f2fd' }}
							disabled={!!args.disabled}>
							–í—ã–±—Ä–∞—Ç—å Python
						</button>
					</div>

					<div style={{ display: 'flex', flexWrap: 'wrap', gap: 8, marginBottom: 16 }}>
						<h4 style={{ width: '100%', margin: '0 0 8px 0', fontSize: 14 }}>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥—Ä–æ–ø–¥–∞—É–Ω–æ–º:</h4>
						<button
							onClick={() => openDropdown()}
							style={{ padding: '6px 12px', fontSize: 12, backgroundColor: '#e3f2fd' }}
							disabled={!!args.disabled}>
							–û—Ç–∫—Ä—ã—Ç—å –¥—Ä–æ–ø–¥–∞—É–Ω
						</button>
						<button
							onClick={() => closeDropdown()}
							style={{ padding: '6px 12px', fontSize: 12, backgroundColor: '#ffebee' }}
							disabled={!!args.disabled}>
							–ó–∞–∫—Ä—ã—Ç—å –¥—Ä–æ–ø–¥–∞—É–Ω
						</button>
					</div>

					<div style={{ display: 'flex', flexWrap: 'wrap', gap: 8, marginBottom: 16 }}>
						<h4 style={{ width: '100%', margin: '0 0 8px 0', fontSize: 14 }}>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–∏—Å–∫–æ–º:</h4>
						<input
							type='text'
							value={externalQuery}
							onChange={(e) => setExternalQuery(e.target.value)}
							placeholder='–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å'
							style={{ padding: '6px 8px', fontSize: 12, border: '1px solid #ccc', borderRadius: 4 }}
						/>
						<button
							onClick={() => setSearchQuery(externalQuery)}
							style={{ padding: '6px 12px', fontSize: 12, backgroundColor: '#e3f2fd' }}
							disabled={!!args.disabled}>
							–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å
						</button>
						<button
							onClick={() => {
								setExternalQuery('');
								setSearchQuery('');
							}}
							style={{ padding: '6px 12px', fontSize: 12, backgroundColor: '#ffebee' }}
							disabled={!!args.disabled}>
							–û—á–∏—Å—Ç–∏—Ç—å –∑–∞–ø—Ä–æ—Å
						</button>
					</div>

					<div style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>
						<h4 style={{ width: '100%', margin: '0 0 8px 0', fontSize: 14 }}>–û—á–∏—Å—Ç–∫–∞:</h4>
						<button
							onClick={() => clearAll()}
							style={{ padding: '6px 12px', fontSize: 12, backgroundColor: '#e3f2fd', color: 'black', border: '1px solid #2196f3' }}
							disabled={!!args.disabled}>
							–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ
						</button>
					</div>
				</div>

				<div style={{ padding: 16, backgroundColor: '#e8f5e8', borderRadius: 8, border: '1px solid #4caf50' }}>
					<h4 style={{ margin: '0 0 12px 0', color: '#2e7d32' }}>üéõÔ∏è –í–Ω–µ—à–Ω–µ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</h4>
					<p style={{ margin: '0 0 12px 0', fontSize: 14, color: '#388e3c' }}>
						–≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–Ω–æ–µ –≤–Ω–µ—à–Ω–µ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º SelectSearch —á–µ—Ä–µ–∑ —Ö—É–∫ useSelectExternalControl.
					</p>
					<div style={{ fontSize: 12, color: '#388e3c' }}>
						<strong>–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç–æ–¥—ã:</strong>
						<ul style={{ margin: '4px 0 0 0', paddingLeft: 16 }}>
							<li>
								<code>selectByValue(value)</code> - –≤—ã–±–æ—Ä –æ–ø—Ü–∏–∏ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é
							</li>
							<li>
								<code>clearAll()</code> - –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π
							</li>
							<li>
								<code>openDropdown()</code> / <code>closeDropdown()</code> - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥—Ä–æ–ø–¥–∞—É–Ω–æ–º
							</li>
							<li>
								<code>setSearchQuery(query)</code> - —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
							</li>
							<li>
								<code>getSelectedValues()</code> - –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
							</li>
							<li>
								<code>getCurrentQuery()</code> - –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
							</li>
							<li>
								<code>getFieldState()</code> - –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—è
							</li>
						</ul>
					</div>
				</div>
			</div>
		);
	},
	args: {
		label: '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è',
		placeholder: '–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å...',
		multiple: false,
		required: false,
		disabled: false,
		hideInput: false,
		hideClearButton: false,
		hideSelectedFromDropdown: false,
		allowBackspaceDelete: true,
		maxVisibleItems: 5,
		visibleCount: 8,
		debounceMs: 250,
		prefix: 'üîç',
		suffix: 'arrow-down',
		showDefaultSuffix: true,
		loadOptions: undefined,
		validator: undefined,
		maxLength: undefined,
		minLength: undefined,
		hideErrorOnFocus: true,
		initialValue: '',
		useAsync: false,
		withValidation: false,
		options: sampleOptions,
	},
};
